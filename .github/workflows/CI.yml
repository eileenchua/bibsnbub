name: CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    strategy:
      matrix:
        node-version: [20.x, 22.x]
    name: Build with ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    environment: staging
    env:
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
      ONE_MAP_API_KEY: ${{ secrets.ONE_MAP_API_KEY }}
      FORCE_LOCAL_DB: 1
      SENTRY_SUPPRESS_TURBOPACK_WARNING: 1
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4

      # If this is a PR from a fork, secrets (including environment secrets) are not available.
      # Skip this secret-dependent build for forked PRs to avoid zod validation errors.
      - name: Detect fork PR and skip secret-required build
        if: ${{ github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name != github.repository }}
        run: |
          echo "This PR is from a fork. Environment secrets are not available; skipping secret-dependent build steps."
          exit 0

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - run: npm ci
      - run: npm run build

  test:
    strategy:
      matrix:
        node-version: [20.x]
    name: Run all tests
    runs-on: ubuntu-latest
    environment: staging
    env:
      CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}
      NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY: ${{ secrets.NEXT_PUBLIC_CLERK_PUBLISHABLE_KEY }}
      NEXT_PUBLIC_CLERK_SIGN_IN_URL: ${{ secrets.NEXT_PUBLIC_CLERK_SIGN_IN_URL }}
      ONE_MAP_API_KEY: ${{ secrets.ONE_MAP_API_KEY }}
      FORCE_LOCAL_DB: 1
      SENTRY_SUPPRESS_TURBOPACK_WARNING: 1
      NODE_ENV: test

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Retrieve Git history, needed to verify commits

      - name: Detect fork PR (for conditional steps)
        id: detect_fork
        run: |
          if [ "${{ github.event_name }}" = "pull_request" ] && [ "${{ github.event.pull_request.head.repo.full_name }}" != "${{ github.repository }}" ]; then
            echo "is_fork=true" >> $GITHUB_OUTPUT
          else
            echo "is_fork=false" >> $GITHUB_OUTPUT
          fi

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: npm
      - run: npm ci

      # Build Next.js for E2E tests and run E2E only when NOT a fork PR (these steps require secrets)
      - name: Build Next.js for E2E tests
        if: steps.detect_fork.outputs.is_fork == 'false'
        run: npm run build

      - if: github.event_name == 'pull_request'
        name: Validate all commits from PR
        run: npx commitlint --from ${{ github.event.pull_request.base.sha }} --to ${{ github.event.pull_request.head.sha }} --verbose

      - name: Linter
        run: npm run lint

      - name: Type checking
        run: npm run check-types

      - name: Run unit tests
        run: npm run test -- --coverage

      - name: Install Playwright (used for Storybook and E2E tests)
        run: npx playwright install --with-deps

      # Run E2E (and Percy) only when NOT a fork PR
      - name: Run E2E tests
        if: steps.detect_fork.outputs.is_fork == 'false'
        run: npx percy exec -- npm run test:e2e
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
          CLERK_SECRET_KEY: ${{ secrets.CLERK_SECRET_KEY }}

      - uses: actions/upload-artifact@v4
        if: always()
        with:
          name: test-results
          path: test-results/
          retention-days: 7
